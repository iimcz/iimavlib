cmake_minimum_required (VERSION 2.9)
SET(CPACK_SOURCE_GENERATOR TBZ2)
SET(CPACK_PACKAGE_VERSION_MAJOR 1)
SET(CPACK_PACKAGE_VERSION_MINOR 2)
SET(CPACK_PACKAGE_VERSION_PATCH 0)
SET(CPACK_PACKAGE_VENDOR IIM)
SET(CPACK_PACKAGE_CONTACT slaby@iim.cz)
SET(CPACK_SYSTEM_NAME linux)
SET(CPACK_PACKAGE_NAME iimav)
SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
SET(CPACK_SOURCE_IGNORE_FILES /.project;/.cproject;/.git/)

INCLUDE(CPack)
INCLUDE(FindPkgConfig)
project (iimav)


OPTION (BUILD_SHARED_LIBS "Build shared libraries." ON)
OPTION (BUILD_EXAMPLES "Build example applications" ON)
OPTION (BUILD_TESTS "Build unit tests" OFF)

#SET(CMAKE_BUILD_TYPE RelWithDebInfo)

include_directories( ${CMAKE_SOURCE_DIR}/include )

IF (UNIX)
add_definitions("-Wall -Wextra -pedantic -std=c++0x")
ELSE()
add_definitions("-D_SCL_SECURE_NO_WARNINGS")
ENDIF ()
find_package(SDL)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
IF(WIN32)
	SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
ELSE()
	SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
ENDIF()
add_subdirectory(src)
add_subdirectory(include)
add_subdirectory(examples)


IF(BUILD_TESTS)
	enable_testing()
	add_subdirectory(tests)
ENDIF()
